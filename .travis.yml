language: minimal
os:
  - linux
sudo: false
env:
  matrix:
    # define own python versions because we are using conda
    - PYTHON_VERSION="2.7"
    - PYTHON_VERSION="3.6"
    - PYTHON_VERSION="3.7"
  global:
    - PATH=${HOME}/miniconda/bin:${PATH}
    - LD_LIBRARY_PATH=${HOME}/miniconda/lib
    - PYCTEST_ARGS='-SF --pyctest-jobs=1 --pyctest-site=Travis --exclude-phantoms shepp3d -- -VV'
    - TOMOPY_USE_C_ALGORITHMS=1
before_install:
  - if [[ "$PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - source ${HOME}/miniconda/etc/profile.d/conda.sh
  - conda activate
  - >
    conda config
    --set always_yes yes
    --set changeps1 no
    --set auto_update_conda no
  - conda update -n base conda
install:
  - PYTHON_TAG=$(echo ${PYTHON_VERSION} | sed 's/\.//g')
  - conda env create -n tomopy -f envs/linux-${PYTHON_TAG}.yml
  - conda activate tomopy
  - conda info -a
  - conda list --explicit
  # Check the compilers
  - echo "C compiler = ${CC}"
  - echo "CXX compiler = ${CXX}"
script:
  - ./pyctest_tomopy.py --enable-tasking --disable-cuda --phantom-size 128 ${PYCTEST_ARGS}
  - ./pyctest_tomopy.py --disable-tasking --disable-cuda --coverage ${PYCTEST_ARGS}
  - $(which nosetests)
after_success:
  - coveralls
